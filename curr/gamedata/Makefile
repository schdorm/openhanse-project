#############################################################################
# Makefile for building: liboh_gamedata.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.4) on: Sa. Aug 11 17:49:55 2012
# Project:  oh_gamedata.pro
# Template: lib
# Command: /usr/bin/qmake -unix -o Makefile oh_gamedata.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_XML_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I../common -I../networktools -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1 -shared -Wl,-soname,liboh_gamedata.so.1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L../common -loh_common -L../networktools -loh_networktools -lQtXml -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = gamedata.cpp \
		save.cpp \
		load.cpp \
		ohparameter.cpp \
		kontor.cpp \
		factory.cpp \
		city.cpp \
		cityproduction.cpp \
		citynames.cpp \
		player.cpp \
		ship.cpp \
		ohtime.cpp \
		wind.cpp \
		position.cpp \
		shiptype.cpp \
		buildings/market.cpp \
		buildings/storagearea.cpp \
		buildings/warehouse.cpp \
		buildings/workerhouse.cpp \
		xmlnames.cpp \
		gamesettings.cpp moc_gamedata.cpp \
		moc_city.cpp \
		moc_player.cpp \
		moc_ohtime.cpp \
		moc_wind.cpp \
		moc_position.cpp
OBJECTS       = gamedata.o \
		save.o \
		load.o \
		ohparameter.o \
		kontor.o \
		factory.o \
		city.o \
		cityproduction.o \
		citynames.o \
		player.o \
		ship.o \
		ohtime.o \
		wind.o \
		position.o \
		shiptype.o \
		market.o \
		storagearea.o \
		warehouse.o \
		workerhouse.o \
		xmlnames.o \
		gamesettings.o \
		moc_gamedata.o \
		moc_city.o \
		moc_player.o \
		moc_ohtime.o \
		moc_wind.o \
		moc_position.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		oh_gamedata.pro
QMAKE_TARGET  = oh_gamedata
DESTDIR       = 
TARGET        = liboh_gamedata.so.1.0.0
TARGETA       = liboh_gamedata.a
TARGETD       = liboh_gamedata.so.1.0.0
TARGET0       = liboh_gamedata.so
TARGET1       = liboh_gamedata.so.1
TARGET2       = liboh_gamedata.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: oh_gamedata.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtXml.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -unix -o Makefile oh_gamedata.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtXml.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile oh_gamedata.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/oh_gamedata1.0.0 || $(MKDIR) .tmp/oh_gamedata1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/oh_gamedata1.0.0/ && $(COPY_FILE) --parents gamedata.h ohparameter.h kontor.h factory.h city.h citynames.h player.h ship.h ohtime.h wind.h position.h shiptype.h buildings/market.h buildings/storagearea.h buildings/warehouse.h buildings/workerhouse.h xmlnames.h gamesettings.h .tmp/oh_gamedata1.0.0/ && $(COPY_FILE) --parents gamedata.cpp save.cpp load.cpp ohparameter.cpp kontor.cpp factory.cpp city.cpp cityproduction.cpp citynames.cpp player.cpp ship.cpp ohtime.cpp wind.cpp position.cpp shiptype.cpp buildings/market.cpp buildings/storagearea.cpp buildings/warehouse.cpp buildings/workerhouse.cpp xmlnames.cpp gamesettings.cpp .tmp/oh_gamedata1.0.0/ && (cd `dirname .tmp/oh_gamedata1.0.0` && $(TAR) oh_gamedata1.0.0.tar oh_gamedata1.0.0 && $(COMPRESS) oh_gamedata1.0.0.tar) && $(MOVE) `dirname .tmp/oh_gamedata1.0.0`/oh_gamedata1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/oh_gamedata1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_gamedata.cpp moc_city.cpp moc_player.cpp moc_ohtime.cpp moc_wind.cpp moc_position.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_gamedata.cpp moc_city.cpp moc_player.cpp moc_ohtime.cpp moc_wind.cpp moc_position.cpp
moc_gamedata.cpp: player.h \
		kontor.h \
		ship.h \
		position.h \
		city.h \
		wind.h \
		ohparameter.h \
		gamedata.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gamedata.h -o moc_gamedata.cpp

moc_city.cpp: city.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) city.h -o moc_city.cpp

moc_player.cpp: kontor.h \
		ship.h \
		position.h \
		player.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) player.h -o moc_player.cpp

moc_ohtime.cpp: ohtime.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ohtime.h -o moc_ohtime.cpp

moc_wind.cpp: wind.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) wind.h -o moc_wind.cpp

moc_position.cpp: position.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) position.h -o moc_position.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

gamedata.o: gamedata.cpp gamedata.h \
		player.h \
		kontor.h \
		ship.h \
		position.h \
		city.h \
		wind.h \
		ohparameter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamedata.o gamedata.cpp

save.o: save.cpp gamedata.h \
		player.h \
		kontor.h \
		ship.h \
		position.h \
		city.h \
		wind.h \
		ohparameter.h \
		ohtime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o save.o save.cpp

load.o: load.cpp gamedata.h \
		player.h \
		kontor.h \
		ship.h \
		position.h \
		city.h \
		wind.h \
		ohparameter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o load.o load.cpp

ohparameter.o: ohparameter.cpp ohparameter.h \
		ohtime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ohparameter.o ohparameter.cpp

kontor.o: kontor.cpp kontor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o kontor.o kontor.cpp

factory.o: factory.cpp factory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o factory.o factory.cpp

city.o: city.cpp city.h \
		ohparameter.h \
		buildings/market.h \
		buildings/warehouse.h \
		buildings/workerhouse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o city.o city.cpp

cityproduction.o: cityproduction.cpp city.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cityproduction.o cityproduction.cpp

citynames.o: citynames.cpp citynames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o citynames.o citynames.cpp

player.o: player.cpp player.h \
		kontor.h \
		ship.h \
		position.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o player.cpp

ship.o: ship.cpp ship.h \
		position.h \
		xmlnames.h \
		shiptype.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ship.o ship.cpp

ohtime.o: ohtime.cpp ohtime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ohtime.o ohtime.cpp

wind.o: wind.cpp wind.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wind.o wind.cpp

position.o: position.cpp position.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o position.o position.cpp

shiptype.o: shiptype.cpp shiptype.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shiptype.o shiptype.cpp

market.o: buildings/market.cpp buildings/market.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o market.o buildings/market.cpp

storagearea.o: buildings/storagearea.cpp buildings/storagearea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o storagearea.o buildings/storagearea.cpp

warehouse.o: buildings/warehouse.cpp buildings/warehouse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o warehouse.o buildings/warehouse.cpp

workerhouse.o: buildings/workerhouse.cpp buildings/workerhouse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o workerhouse.o buildings/workerhouse.cpp

xmlnames.o: xmlnames.cpp xmlnames.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xmlnames.o xmlnames.cpp

gamesettings.o: gamesettings.cpp gamesettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamesettings.o gamesettings.cpp

moc_gamedata.o: moc_gamedata.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamedata.o moc_gamedata.cpp

moc_city.o: moc_city.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_city.o moc_city.cpp

moc_player.o: moc_player.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_player.o moc_player.cpp

moc_ohtime.o: moc_ohtime.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ohtime.o moc_ohtime.cpp

moc_wind.o: moc_wind.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wind.o moc_wind.cpp

moc_position.o: moc_position.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_position.o moc_position.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

